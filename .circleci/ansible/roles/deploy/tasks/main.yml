# ---
#   - name: "upgrade packages."
#     become: true
#     apt:
#       upgrade: "yes"

#   - name: "install dependencies."
#     become: true
#     apt:
#       name: ["nodejs", "npm", "tar", "gzip", "git"]
#       update_cache: yes

#   - name: "install pm2"
#     become: true
#     npm:
#       name: pm2
#       global: yes
#       production: yes
#       state: present

#   - name: Creates directory
#     file:
#         path: /home/backend
#         state: directory

#   - name: Copy backend dist files web server
#     copy:
#       src: /root/project/artifact.tar.gz
#       dest: /home/backend/artifact.tar.gz

#   - name: Uncompress Backend
#     shell: |
#       cd /home/backend
#       tar xvzf artifact.tar.gz -C .
#       ls -la

#   - name: "install npm packages"
#     become: true
#     command: npm install
#     args:
#       chdir: /home/backend

#   - name: "compile npm packages"
#     become: true
#     command: npm run build
#     args:
#       chdir: /home/backend

#   - name: "start server"
#     become: true
#     command: pm2 start npm -- run start
#     args:
#       chdir: /home/backend/dist



---
- name: Update apt packages
  become: true
  apt:
    update_cache: yes

- name: upgrade packages
  become: true
  apt:
    upgrade: yes

- name: remove dependencies that are no longer required
  become: true
  apt:
    autoremove: yes

- name: install dependencies.
  become: true
  apt:
    name: ["nodejs", "npm", "python3", "tar", "gzip", "git"]
    state: latest
    update_cache: yes

- name: install pm2
  become: true
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: Creates directory
  file:
    path: /root/backend
    state: directory

- name: Copy backend dist files web server
  copy:
    src: /root/project/artifact.tar.gz
    dest: /root/backend/artifact.tar.gz

- name: Uncompress Backend
  shell: |
    cd /root/backend
    tar xvzf artifact.tar.gz -C .
    ls -la
    
- name: Build and Start PM2
  shell: |
    cd /root/backend 
    npm install
    npm run build
    pm2 start npm --name backend -- start



# - name: Create app dir
#   become: yes
#   file:
#     path: /home/ubuntu/app
#     state: directory

# - name: "Copy backend build folder to EC2"
#   become: yes
#   unarchive:
#     src: /tmp/workspace/backend.tar.gz
#     dest: /home/ubuntu/app/
#     owner: ubuntu

# - name: "Copy package.json to EC2"
#   become: yes
#   copy:
#     src: /tmp/workspace/package.json
#     dest: /home/ubuntu/app/
#     owner: ubuntu

# - name: "NPM Install"
#   shell:
#     cmd: npm install --production
#     chdir: /home/ubuntu/app

# - name: "Start backend with pm2"
#   become: yes
#   shell: |
#     cd /home/ubuntu/app
#     pm2 start main.js --name app
#   environment:
#     ENVIRONMENT: production
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "./migrations"
#     TYPEORM_MIGRATIONS: "./migrations/*.js"
#     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"